3. What problems/warnnings in the code?

Ans.

use onClick={()=>onClickHandler(index)} instead of using Errors that identified where onClick={onClickHandler(index)}

const [setSelectedIndex, selectedIndex] = useState(); // in this selectedIndex and setSelectedIndex or in reverse order
Instead use const [selectedIndex,setSelectedIndex] = useState();
And also make useState(null);
const [selectedIndex,setSelectedIndex] = useState(null);

At return WrappedListComponent in the return value use isSelected={index===selected} instead using
isSelected={selectedIndex}

And PropTypes.arrayOf has to be used and PropTypes.shape has to be used

And define some value for props instead of makinf it to null.
The modified code is

import React, { useState, useEffect, memo } from 'react';
import PropTypes from 'prop-types';

// Single List Item
const WrappedSingleListItem = ({
index,
isSelected,
onClickHandler,
text,
}) => {
return (
<li
style={{ backgroundColor: isSelected ? 'green' : 'red'}}
onClick={()=>onClickHandler(index)}
>
{text}

);
};

WrappedSingleListItem.propTypes = {
index: PropTypes.number,
isSelected: PropTypes.bool,
onClickHandler: PropTypes.func.isRequired,
text: PropTypes.string.isRequired,
};

const SingleListItem = memo(WrappedSingleListItem);

// List Component
const WrappedListComponent = ({
items,
}) => {
const [selectedIndex,setSelectedIndex] = useState(null);

useEffect(() => {
setSelectedIndex(null);
}, [items]);

const handleClick = index => {
setSelectedIndex(index);
};

return (
<ul style={{ textAlign: 'left' }}>
{items.map((item, index) => (
<SingleListItem
key={index}
index={index}
isSelected={index === selectedIndex}
onClickHandler={handleClick}
text={item.text}
/>
))}

)
};

WrappedListComponent.propTypes = {
items: PropTypes.arrayOf(PropTypes.shape({
text: PropTypes.string.isRequired,
})),
};

WrappedListComponent.defaultProps = {
items: [
{
text: 'item1',
},
{
text: 'item2',
},
{
text: 'item3',
},
{
text: 'item4',
},
],
};

const List = memo(WrappedListComponent);

export default List;


